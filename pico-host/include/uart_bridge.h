/**
 * @file uart_bridge.h
 * @author your name (you@domain.com)
 * @brief
 * @version 0.1
 * @date 2023-09-16
 *
 * @copyright Copyright (c) 2023
 *
 */

#ifndef UART_BRIDGE_H
#define UART_BRIDGE_H
#include "ALL.h"

#define UART_ID uart0
#define BAUD_RATE 115200
#define DATA_BITS 8
#define STOP_BITS 1
#define PARITY UART_PARITY_NONE

// We are using pins 0 and 1, but see the GPIO function select table in the
// datasheet for information on which other pins can be used.
#define UART_TX_PIN 0
#define UART_RX_PIN 1

#define Yes 1u
#define No 0u
#define Enable 1u
#define Disable 0u

uint32_t len_chars = 0;
const uint led_pin = 25;
uint8_t uart_buffer[256] = {[0 ... 255] = 0x00};
uint8_t UART_Response[3] = {0xC0, 0x0D, 0x0A};
uint8_t UART_Response1[3] = {0xC3, 0x0D, 0x0A};
uint8_t Host_ver[3] = {0x00, 0x00, 0x01};
uint8_t _id = 0;

bool IsEnableACK;



#define SDMVer 0x00
#define SDMSWver 0x01
#define SDMHWver 0x02

#define Diagnostic 0x04
#define GetDiagnostic 0x01
#define GetVoltageValue 0x02
#define Gettemp 0x03
#define GetAmbienttemp 0x04
#define GetADC 0x05


#define Brightness 0x01
#define Status 0x02
#define DisplayPattern 0x03

#define Current 0x05
#define Current_Normal 0x01
#define Current_Sleep 0x02
#define Touches 0x06
#define Simulator 0x09

// uint8_t SDM_SWver[9] = {0xFA, 0x00, 0x00, 0x01, 0x04, 0x00, 0x01, 0x0D, 0x0A};
// uint8_t SDM_HWver[9] = {0xFA, 0x00, 0x00, 0x02, 0x04, 0x00, 0x02, 0x0D, 0x0A};
// uint8_t SDM_Diagnostic[14] = {0xFA, 0x00, 0x04, 0x00, 0x09, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x0D, 0x0A};                                                          // 3
// uint8_t SDM_BacklightBrightness[8] = {0xFA, 0x00, 0x01, 0x01, 0x03, 0x00, 0x0D, 0x0A};                                                                                      // 1
// uint8_t SDM_Current[24] = {
//     0xFA, 0x00, 0x05, 0x01, 
//     0x13, 
//     0x01, 
//     0x00, 0x01,
//     0x00, 0x02,  
//     0x00, 0x03, 
//     0x00, 0x04, 
//     0x00, 0x05, 
//     0x00, 0x06, 
//     0x00, 0x07, 
//     0x00, 0x08, 
//     0x0D, 0x0A}; // 3
// // uint8_t SDM_Current_Normal[22] = {0xFA, 0x00, 0x13, 0x00, 0x01, 0x01 ,0x02 ,0x02 ,0x03 ,0x03 ,0x04 ,0x04 ,0x05 ,0x05 ,0x06 ,0x06 ,0x07 ,0x07 ,0x08 ,0x08 ,0x0D, 0x0A};  // 3
// // uint8_t SDM_Current_Sleep[22] = {0xFA, 0x00, 0x13, 0x00, 0x01, 0x01 ,0x02 ,0x02 ,0x03 ,0x03 ,0x04 ,0x04 ,0x05 ,0x05 ,0x06 ,0x06 ,0x07 ,0x07 ,0x08 ,0x08 ,0x0D, 0x0A};  // 3
// uint8_t SDM_Touch[19] = {0xFA, 0x00, 0x06, 0x01, 0x0E, 0x00, 0x05, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x04, 0x05, 0x05, 0x0D, 0x0A}; // 3
uint8_t SDM_SWver[7] = {0xFA, 0x01, 0x04, 0x01, 0x02, 0x0D, 0x0A};
uint8_t SDM_HWver[7] = {0xFA, 0x01, 0x04, 0x03, 0x04, 0x0D, 0x0A};
                                                      // 3
uint8_t SDM_BacklightBrightness[6] = {0xFA, 0x01, 0x03, 0x00, 0x0D, 0x0A};    


uint8_t SDM_Diagnostic[14] = {0xFA, 0x01, 0x0A, 0x01,
                              0x01, 0x02, 0x03, 0x04, 
                              0x05, 0x06, 0x07, 0x08, 
                              0x0D, 0x0A};   
uint8_t SDM_Voltage[7]      = {0xFA, 0x01, 0x04, 0x00, 0x8A, 0x0D, 0x0A};  
uint8_t SDM_temp[8]     = {0xFA, 0x01, 0x05, 0x11, 0x11, 0x11, 0x0D, 0x0A};  
uint8_t SDM_Ambienttemp[6]  = {0xFA, 0x01, 0x03, 0x44, 0x0D, 0x0A};
uint8_t SDM_ADC[7]          = {0xFA, 0x01, 0x04, 0x11, 0x55, 0x0D, 0x0A};  



uint8_t SDM_NormCurrent[7] = {0xFA, 0x01, 0x04, 0x12, 0x34, 0x0D, 0x0A}; 
uint8_t SDM_SleepCurrent[7] = {0xFA, 0x01, 0x04, 0x00, 0x34, 0x0D, 0x0A}; 


uint8_t SDM_Touch[10] = {0xFA, 0x01, 0x07, 0x01, 0x01, 
                         0x00, 0x32, 0x32, 0x0D, 0x0A}; // 3



uint8_t SDM_Simulator[7] = {0xFF, 0x52, 0x00, 0x09, 0x00, 0x0D, 0x0A};

void UART_RX_INTB(void);

#endif